// Generated by jextract

package org.eclipse.core.internal.resources.refresh.linux.inotify;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$0 {

    static final FunctionDescriptor inotify_init$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle inotify_init$MH = RuntimeHelper.downcallHandle(
        inotify_h.LIBRARIES, "inotify_init",
        "()I",
        constants$0.inotify_init$FUNC, false
    );
    static final FunctionDescriptor inotify_init1$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle inotify_init1$MH = RuntimeHelper.downcallHandle(
        inotify_h.LIBRARIES, "inotify_init1",
        "(I)I",
        constants$0.inotify_init1$FUNC, false
    );
    static final FunctionDescriptor inotify_add_watch$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle inotify_add_watch$MH = RuntimeHelper.downcallHandle(
        inotify_h.LIBRARIES, "inotify_add_watch",
        "(ILjdk/incubator/foreign/MemoryAddress;I)I",
        constants$0.inotify_add_watch$FUNC, false
    );
    static final FunctionDescriptor inotify_rm_watch$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle inotify_rm_watch$MH = RuntimeHelper.downcallHandle(
        inotify_h.LIBRARIES, "inotify_rm_watch",
        "(II)I",
        constants$0.inotify_rm_watch$FUNC, false
    );
}


